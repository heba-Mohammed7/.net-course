

public class Solution {
    private ListNode current;

    public TreeNode SortedListToBST(ListNode head) {
        int size = GetSize(head);
        current = head;
        return BuildBST(0, size - 1);
    }

    private int GetSize(ListNode head) {
        int count = 0;
        while (head != null) {
            count++;
            head = head.next;
        }
        return count;
    }

    private TreeNode BuildBST(int left, int right) {
        if (left > right) return null;

        int mid = (left + right) / 2;

        TreeNode leftChild = BuildBST(left, mid - 1);

        TreeNode node = new TreeNode(current.val);
        node.left = leftChild;

        current = current.next;

        node.right = BuildBST(mid + 1, right);

        return node;
    }
}
