using System;
using System.Collections.Generic;

public class QueueUsingStacks<T>
{
    private readonly Stack<T> stack1;
    private readonly Stack<T> stack2;

    public QueueUsingStacks()
    {
        stack1 = new Stack<T>();
        stack2 = new Stack<T>();
    }

    public void Enqueue(T item)
    {
        stack1.Push(item);
    }

    public T Dequeue()
    {
        if (stack2.Count == 0)
        {
            if (stack1.Count == 0)
            {
                throw new InvalidOperationException("Queue is empty");
            }
            
            while (stack1.Count > 0)
            {
                stack2.Push(stack1.Pop());
            }
        }
        
        return stack2.Pop();
    }

    public T Peek()
    {
        if (stack2.Count == 0)
        {
            if (stack1.Count == 0)
            {
                throw new InvalidOperationException("Queue is empty");
            }
            
            while (stack1.Count > 0)
            {
                stack2.Push(stack1.Pop());
            }
        }
        
        return stack2.Peek();
    }

    public int Count => stack1.Count + stack2.Count;

    public bool IsEmpty => Count == 0;
}